<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>모든 글 - Joonshik Tech Blog</title><link>http://jshong0907.github.io/posts/</link><description>모든 글 | Joonshik Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sat, 13 Jul 2024 00:07:11 +0900</lastBuildDate><atom:link href="http://jshong0907.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>[Python] 추상 클래스</title><link>http://jshong0907.github.io/posts/python-abstract-class/</link><pubDate>Sat, 13 Jul 2024 00:07:11 +0900</pubDate><author><name>JoonShik</name><uri>http://jshong0907.github.io/authors/joonshik</uri><email>jshong0907@gmail.com</email></author><guid>http://jshong0907.github.io/posts/python-abstract-class/</guid><description>&lt;div class="featured-image">
&lt;img src="/posts/python-abstract-class/thumbnail.png" referrerpolicy="no-referrer">
&lt;/div>추상 클래스는 하나 이상의 추상 메소드를 포함하는 클래스입니다. Python에서는 어떻게 추상 클래스를 생성할까요?</description></item><item><title>[DevOps] 컨테이너란?</title><link>http://jshong0907.github.io/posts/k8s-container/</link><pubDate>Thu, 11 Jul 2024 23:31:57 +0900</pubDate><author><name>JoonShik</name><uri>http://jshong0907.github.io/authors/joonshik</uri><email>jshong0907@gmail.com</email></author><guid>http://jshong0907.github.io/posts/k8s-container/</guid><description>&lt;div class="featured-image">
&lt;img src="/posts/k8s-container/thumbnail.png" referrerpolicy="no-referrer">
&lt;/div>컨테이너는 호스트 운영 체제에서 응용 프로그램과 그 종속성을 포함하여 일관된 환경에서 실행될 수 있도록 격리된 경량 가상화 기술입니다.</description></item><item><title>[Python] GIL</title><link>http://jshong0907.github.io/posts/python-gil/</link><pubDate>Thu, 11 Jul 2024 02:51:18 +0900</pubDate><author><name>JoonShik</name><uri>http://jshong0907.github.io/authors/joonshik</uri><email>jshong0907@gmail.com</email></author><guid>http://jshong0907.github.io/posts/python-gil/</guid><description>&lt;div class="featured-image">
&lt;img src="/posts/python-gil/thumbnail.png" referrerpolicy="no-referrer">
&lt;/div>Python의 Global Interpreter Lock(GIL)은 여러 스레드가 동시에 Python 코드를 실행하는 것을 막는 기법입니다.</description></item><item><title>[Python] Garbage Collection</title><link>http://jshong0907.github.io/posts/python-gc/</link><pubDate>Wed, 10 Jul 2024 16:20:07 +0900</pubDate><author><name>JoonShik</name><uri>http://jshong0907.github.io/authors/joonshik</uri><email>jshong0907@gmail.com</email></author><guid>http://jshong0907.github.io/posts/python-gc/</guid><description>&lt;div class="featured-image">
&lt;img src="/posts/python-gc/thumbnail.png" referrerpolicy="no-referrer">
&lt;/div>가비지 컬렉션은 프로그래밍 언어에서 더 이상 필요하지 않은 객체를 자동으로 메모리에서 해제하는 메모리 관리 방법입니다. 그렇다면 Python에서는 어떻게 GC를 처리할까요?</description></item><item><title>[Python] Black을 통한 코드 스타일 자동화</title><link>http://jshong0907.github.io/posts/black/</link><pubDate>Sun, 07 Jul 2024 19:59:08 +0900</pubDate><author><name>JoonShik</name><uri>http://jshong0907.github.io/authors/joonshik</uri><email>jshong0907@gmail.com</email></author><guid>http://jshong0907.github.io/posts/black/</guid><description>&lt;div class="featured-image">
&lt;img src="/posts/black/thumbnail.png" referrerpolicy="no-referrer">
&lt;/div>Black은 Python의 엄격한 코드 스타일 자동화 도구입니다.</description></item><item><title>[Python] Poetry를 통한 Python 개발 환경 구축</title><link>http://jshong0907.github.io/posts/poetry/</link><pubDate>Fri, 05 Jul 2024 18:31:44 +0900</pubDate><author><name>JoonShik</name><uri>http://jshong0907.github.io/authors/joonshik</uri><email>jshong0907@gmail.com</email></author><guid>http://jshong0907.github.io/posts/poetry/</guid><description>&lt;div class="featured-image">
&lt;img src="/posts/poetry/thumbnail.png" referrerpolicy="no-referrer">
&lt;/div>Poetry는 Python의 의존성 관리 및 패키징 도구입니다.</description></item></channel></rss>